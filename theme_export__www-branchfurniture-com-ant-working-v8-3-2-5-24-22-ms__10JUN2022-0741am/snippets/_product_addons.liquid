{%- if sectionProducts -%}
<style>
  .product-wrap .addons {min-width: 12em; padding-left: 7%; -webkit-box-flex: 1; -moz-box-flex: 1; -ms-flex: 1; -webkit-flex: 1; flex: 1;}
  .product-wrap .addons .head {margin-bottom: 1em; padding-bottom: 0.5em; line-height: 100%; font-weight: 500; border-bottom: 1px solid;}
  .product-wrap .addons .head span {position: relative;}
  .product-wrap .addons label {line-height: 120%; padding: 0; margin: 0; font-size: 1em; letter-spacing: 0;}
  .product-wrap .addons .checkbox-custom-label:before {display: none;}
  .product-wrap .addons .checkbox-custom + .checkbox-custom-label:after {content: ''; background: {{settings.content_main_color}} url({{"checked-white.png" | asset_url}}) no-repeat center; background-size: 0%; border: 2px solid {{settings.content_main_color}}; display: inline-block; vertical-align: middle; width: 0.8em; height: 0.8em; border-radius: 1px; margin-left: 0.5em; margin-top: 0.25em; text-align: center; -webkit-transition: all 0.2s linear; -moz-transition: all 0.2s linear; -o-transition: all 0.2s linear; -ms-transition: all 0.2s linear; transition: all 0.2s linear;}
  .product-wrap .addons .checkbox-custom:checked + .checkbox-custom-label:after {background-color: {{settings.content_main_color}}; background-size: 100%;}
  .product-wrap .addons .item:not(:last-child) {margin-bottom: 1em;}
  .product-wrap .addons-variants .addon-name {white-space: nowrap; padding-right: 1em;}
  .product-wrap .addons-variants .addon-name strong {font-weight: 500;}
  .product-wrap .addons-variants .swatch-element {margin: 0.3em 1.2em 0.3em 0;}
  .product-wrap .addons-variants .item {display: none; margin-top: 2em;}
  .product-wrap .addons-variants .item.disabled {opacity: 0.5;}
  .product-wrap .addons .head .info {cursor: pointer; position: absolute; padding-top: 0.1em; text-align: center; left: 110%; top: 50%; -webkit-transform: translateY(-50%); transform: translateY(-50%); color: #fff; background: {{settings.content_third_color}}; font-weight: 700; width: 1.5em; height: 1.5em; border-radius: 50%; font-size: 0.6em; line-height:150%; font-family: {{settings.heading_font.family}}, {{settings.heading_font.fallback_families}}; -webkit-transition: all 0.2s linear; -moz-transition: all 0.2s linear; -o-transition: all 0.2s linear; -ms-transition: all 0.2s linear; transition: all 0.2s linear;}
  .product-wrap .addons .head .info .tooltip {width: 20em; white-space: normal; font-weight: 500; font-family: {{settings.body_font.family}}, {{settings.body_font.fallback_families}}; display: none; text-align:center; line-height: 150%; background:{{settings.content_third_color}}; color: #fff; right: -6.5em; bottom:80%; padding: 0.8em; font-size: 12px; font-weight: 500; {% if settings.enable_color_swatches == true %}display: block;{% else %}display:none;{% endif %} position:absolute; -webkit-transform: translateY(10px); transform: translateY(10px); margin-bottom:10px; filter:alpha(opacity=0); -khtml-opacity: 0; -moz-opacity: 0; opacity:0; visibility:hidden; -webkit-transition: all .25s ease-out; -moz-transition: all .25s ease-out; -ms-transition: all .25s ease-out; -o-transition: all .25s ease-out; transition: all .25s ease-out; z-index: 10000;}
  .product-wrap .addons .head .info .tooltip:after {content:" "; border: 10px solid transparent; border-top: 10px solid {{settings.content_third_color}}; border-bottom: 0; bottom: -8px; height:0; right: 6.5em; -webkit-transform: translateX(0.3em); transform: translateX(0.3em); position:absolute; width:0;}
  .product-wrap .addons .quick-view-link:hover {color: #8dc0d2;}
  .isNotMobile .product-wrap .addons .head .info:hover .tooltip, .product-wrap .addons .head .info.active .tooltip {filter:alpha(opacity=100); -khtml-opacity:1; -moz-opacity:1; opacity:1; visibility:visible; bottom: 100%; -webkit-transform: translateY(0); transform: translateY(0);}
  @media all and (max-width: 600px){
    .product-wrap .addons {width: 100%; min-width: 100%; margin-bottom: 1.5em;}
    .product-wrap .addons .wrap {margin-left: -7%; display: -webkit-box !important; display: -moz-box !important; display: -ms-flexbox !important; display: -webkit-flex !important; display: flex !important; -webkit-box-wrap: wrap; -moz-box-wrap: wrap; -ms-flex-wrap: wrap; -webkit-flex-wrap: wrap; flex-wrap: wrap;}
    .product-wrap .addons .item {width: 50%; margin-bottom: 0.5em; padding-left: 7%;}
    .product-wrap .addons-variants .addon-name {width: 100%; display: block; margin-bottom: 1em; padding-bottom: 0.5em; line-height: 100%; font-weight: 500; border-bottom: 1px solid; white-space: normal;}
    .product-wrap .addons-variants .item {margin-bottom: 1.5em;}
  }
</style>
  <div class="addons one-third small--one-half last">
    <div class="head flex align-items-center" aria-hidden="true"><span>Add-Ons<a href="#" class="chat-trigger info hover-tooltip" tabindex="0">i<div class="tooltip">Not sure if you want accessories? Chat with a Branch Expert.</div></a></span></div>
    <div class="wrap">
      {%- comment -%}******* ADD-ONS - PRODUCT LEVEL *******{%- endcomment -%}

      {%- assign productAddons = currentProduct.metafields.addons.handles | split: ', ' -%}
      {%- assign addons = productAddons -%}
      {%- for addonHandle in productAddons -%}
        {%- assign addonProduct = all_products[addonHandle] -%}
        {%- assign addonTitle = addonProduct.title -%}
        {%- assign addonPrice = addonProduct.price -%}
        {%- assign addonUrl = addonProduct.url -%}
        {%- assign addonId = addonProduct.id -%}
        {%- if addonProduct.available -%}
          <div class="item">
            <input class="checkbox-custom" id="addon-{{ addonProduct.id }}" type="checkbox" aria-hidden="true" data-addon-id="{{ addonProduct.id }}" />
            <label class="checkbox-custom-label flex align-items-start justify-content-between" role="button" for="addon-{{ addonProduct.id }}">
              <span class="visuallyhidden">Add </span>
              <span class="flex-1">
                <a href="#" class="quick-view-link" data-addon-id="{{ addonId }}" data-url="{{ addonUrl }}?view=quick-view">
                {{addonTitle}}
                {{addonPrice | money_without_trailing_zeros | prepend: " (+" | append: ")" }}
                </a>
              </span>
            </label>
          </div>
        {%- endif -%}
      {%- endfor -%}
      
      
      {%- comment -%}******* ADD-ONS - VARIANT LEVEL *******{%- endcomment -%}

      {%- for variant in currentProduct.variants -%}
      	{%- assign variantAddons = variant.metafields.addons.handles | split: ', ' -%}
      	{%- assign addons = addons | concat: variantAddons -%}
        {%- for addonHandle in variantAddons -%}
          {%- unless productAddons contains addonHandle -%}
            {%- assign addonProduct = all_products[addonHandle] -%}
            {%- assign addonTitle = addonProduct.title -%}
            {%- assign addonPrice = addonProduct.price -%}
            {%- if addonProduct.available -%}
           	  <div class="item">
             	  <input class="checkbox-custom" id="addon-{{ addonProduct.id }}" type="checkbox" aria-hidden="true" data-addon-id="{{ addonProduct.id }}" />
             	  <label class="checkbox-custom-label flex align-items-start justify-content-between" role="button" for="addon-{{ addonProduct.id }}">
               		 <span class="visuallyhidden">Add </span>
               		 <span class="flex-1">{{addonTitle}} {{addonPrice | money_without_trailing_zeros | prepend: " (+" | append: ")" }}</span>
             	  </label>
           </div>
            {%- endif -%}
          {%- endunless -%}
        {%- endfor -%}
      {%- endfor -%}

      {%- assign addons = addons | uniq -%}
    </div>
  </div>
  <script>
    $(function(){
      var productJs = $('#product-item-{{ currentProduct.id }}').data('productjs');

      var updatePrice = function(){
        var currentVariant = productJs.getCurrentVariant();
        var newPrice = currentVariant.price;
        var ids = [];
        
        $('.addons-variants .item.multipleVariant:not(.disabled) input:checked').each(function(){
        	newPrice += $(this).next().data('variant-price');
          	ids.push($(this).val());
        });
        $('.addons-variants .item.singleVariant:not(.disabled) input').each(function(){
        	newPrice += $(this).data('variant-price');
          	ids.push($(this).val());
        });
        newPrice = Shopify.formatMoney(newPrice, Simplistic.formatMoney).replace('.00', '');
        $('#product-item-{{ currentProduct.id }} [data-price="deal"]').html(newPrice);
        
        //Update the new ids
        $('.addons-variants .additional-ids').html('');
        $.each(ids, function(){
          $('.addons-variants .additional-ids').append('<input type="hidden" name="id[]" value="'+this+'"/>');
        });
      };
      
      //Checkbox for addons
      var updateAddons = function(){
        var currentVariant = productJs.getCurrentVariant();

      	$('.addons .item[data-variant-id]').each(function(){
          if($(this).data('variant-id')==currentVariant.id) {
          	$(this).show();
          } else {
          	$(this).hide().find('input').prop('checked', false).change();
          }
        });
        
        updateAddonsVariants();
      };
      
      //swatches for addons
      var updateAddonsVariants = function(addonId){
      	var size = productJs.getCurrentVariantOption('size').replace(/ /g, "-");
        
        if(addonId) {
        	var items = $('.addons-variants .item[data-addon-id='+addonId+']');
        } else {
        	var items = $('.addons-variants .item');
        }

        items.each(function(){
          $(this).find('[data-size]').each(function(){
            if(size=="" || $(this).data('size')=="" || $(this).data('size').toUpperCase()==size.toUpperCase()) {
              $(this).show();
            } else {
              $(this).hide();
            }
          });
          if(!$(this).find('input:checked').is(':visible')) {
          	$(this).find('input:visible:first').prop('checked', true).change();
          }
        });
      };

      $('.addons .item input').change(function(){
		var addonId = $(this).data('addon-id');
        if($(this).is(':checked')){
          $('.addons-variants').find('.item[data-addon-id="'+ addonId +'"]').removeClass('disabled').show();
        }else{
          $('.addons-variants').find('.item[data-addon-id="'+ addonId +'"]').addClass('disabled').hide();
        }
        updateAddonsVariants(addonId);
        updatePrice();
      });

      $('.addons-variants input').change(function(){
        updatePrice();
        var variantName = $(this).closest('.swatch-element').data('variant-name');
        $(this).closest('.item').find('.variant-title').text(variantName);
      });
      
      $('#product-item-{{ currentProduct.id }}').on('variantChange', function(){
        updateAddons();
      	updatePrice();
      });
      updateAddons();
      
    });
  </script>
{%- endif -%}
{%- if sectionVariants -%}
  <div class="addons-variants">
    {%- for addonHandle in addons -%}
      {%- assign addonProduct = all_products[addonHandle] -%}
      {%- assign addonTitle = addonProduct.title -%}
      {%- if addonProduct.variants.size > 1 -%}
        <div class="item multipleVariant disabled" data-addon-id="{{ addonProduct.id }}">
          <div class="addon-name"><strong>{{addonTitle}}:</strong> <span class="variant-title">{{addonProduct.variants.first.title}}</span></div>
          {%- for addonVariantOption in addonProduct.options_with_values -%}
          	{%- if addonVariantOption.name contains 'color' or addonVariantOption.name contains 'Color' -%}
          		{%- assign colorIndex = 'option' | append: forloop.index -%}
          	{%- endif -%}
          	{%- if addonVariantOption.name contains 'size' or addonVariantOption.name contains 'Size' -%}
          		{%- assign sizeIndex = 'option' | append: forloop.index -%}
          	{%- endif -%}
          {%- endfor -%}
          <div class="swatches-wrapper flex align-items-center">
            {%- for addonVariant in addonProduct.variants -%}
              {%- if addonVariant.available -%}
                {%- assign addonVariantName = addonVariant.title -%}
                <div class="swatch-element color available" data-variant-name="{{ addonVariantName }}" data-size="{{ addonVariant[sizeIndex] | handle }}">
                  <div class="tooltip" aria-hidden="true">{{ addonVariantName }}</div>
                  <input class="visuallyhidden" id="addonvariant-{{ addonVariant.id }}" name="addon-{{addonProduct.id}}" type="radio" value="{{ addonVariant.id }}"{% if forloop.first %} checked{% endif %} aria-hidden="true" />
                  <label class="{% if colorIndex == blank %}hide{% endif %}  animation color color-{{ addonVariant[colorIndex] | handle }}" role="button" for="addonvariant-{{ addonVariant.id }}" data-variant-id="{{ addonVariant.id }}" data-variant-title="{{addonVariant.title}}" data-variant-price="{{addonVariant.price}}" >
                    <img class="crossed-out" src="{{ 'soldout.png' | asset_url }}" alt="Sold Out" />
                    <span class="visuallyhidden">Select {{ addonVariantName }} {{ swatch }}</span>
                  </label>
                </div>
              {%- endif -%}
            {%- endfor -%}
          </div>
        </div>
      {%- else -%}
    	<div class="item singleVariant disabled" data-addon-id="{{ addonProduct.id }}">
    		<input type="hidden" value="{{addonProduct.variants.first.id}}" data-variant-price="{{addonProduct.variants.first.price}}" />
    	</div>
      {%- endif -%}
    {%- endfor -%}
    <div class="additional-ids"></div>
  </div>
{%- endif -%}